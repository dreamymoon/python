————————————————————————————————————————————python basic——————————————————————————————
#week one
int 整数 floats 有小数 str 文本
int(3.1)  int(3.9) 赎出均为3
x//y #x/y取整数部分
x%y  #x/y的reminder
valueable命名原则：字母开头，不存在特殊符号（$+之类的）
x+=3 #increment x by 3;same as x=x+3
x-=3 #同理
randrange(1,7)   # return an int, one of 1,2,3,4,5,6

#week two
song.split() song里按空格切分成list，（"e"）就是按照e切分成list；"/".join(song) 就是通过/把song里的各部分合起来

#week four
 the behavior of obj = obj + object_two is different than obj += object_two when obj is a list.
 The first version makes a new object entirely and reassigns to obj. 
 The second version changes the original object so that the contents of object_two are added to the end of the first.

mylist.append(5) 添加5进去；mylist.insert(1, 12) 在1位置插入12；mylist.count(12) 12出现次数计数；mylist.index(3) 3出现的位置；
mylist.reverse()前后倒；mylist.sort() 从小到大排列；mylist.remove(5) 移除5这个数字 VS del mylist[0]删除第一位数；mylist.pop() Removes and returns the last item；
Non-mutating:a.upper() a.lower() 全部大写/小写；"***"+ss.strip()+"***" 移除前后的空格；news = ss.replace("o", "***") 替换

format的使用：
origPrice = float(input('Enter the original price: $'))
discount = float(input('Enter discount percentage: '))
newPrice = (1 - discount/100)*origPrice
calculation = '${:.2f} discounted by {}% is ${:.2f}.'.format(origPrice, discount, newPrice)  #{:.2f}表示float后小数取两位
print(calculation)


#Assignment: Final Course Assignment 巨费时，写了好久……
1.Below are a set of scores that students have received in the past semester. Write code to determine how many are 90 or above and assign that result to the value a_scores.
不难，很快写出来了
scores = "67 80 90 78 93 20 79 89 96 97 92 88 79 68 58 90 98 100 79 74 83 88 80 86 85 70 90 100"
list=scores.split()
a_scores=0
for score in list:
    if float(score)>=90:
        a_scores+=1
print (a_scores)

2.Write code that uses the string stored in org and creates an acronym which is assigned to the variable acro. 
Only the first letter of each word should be used, each letter in the acronym should be a capital letter, 
and there should be nothing to separate the letters of the acronym. 
Words that should not be included in the acronym are stored in the list stopwords. 
For example, if org was assigned the string “hello to world” then the resulting acronym should be “HW”.
第二题和第三题是差不多的，我一直没成功的部分是pass（之前没跳过导致后面循环不下去）
stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', "The"]
org = "The organization for health, safety, and education"
words=org.split()
acro=""

for word in words:
    if word in stopwords:
        pass
    else:
        up=word[0].upper()
        print(up)
        acro=acro+up
print (acro)
    
3.Write code that uses the string stored in sent and creates an acronym which is assigned to the variable acro. 
The first two letters of each word should be used, each letter in the acronym should be a capital letter, 
and each element of the acronym should be separated by a “. ” (dot and space). 
Words that should not be included in the acronym are stored in the list stopwords. 
For example, if sent was assigned the string “height and ewok wonder” then the resulting acronym should be “HE. EW. WO”.
结果最后是没有.的，原来用了acro=acro+new_word.upper()+"."，最后一个点不会移除，一直不成功，换一个方法就好了
stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', 'The']
sent = "The water earth and air are vital"
lst=[]
words=sent.split()
for word in words:
    if word in stopwords:
        pass
    else:
        new_word=word[0:2]
        print (new_word)
        lst.append(new_word.upper())
        print (lst)
acro=". ".join(lst)       
print (acro)

4.A palindrome is a phrase that, if reversed, would read the exact same. 
Write code that checks if p_phrase is a palindrome by reversing it and then checking if the reversed version is equal to the original. 
Assign the reversed version of p_phrase to the variable r_phrase so that we can check your work.
开始没理解，写了好半天，回溯总结还是挺简单的
p_phrase = "was it a car or a cat I saw"
r_phrase = "" 
for i in p_phrase: 
    r_phrase = i + r_phrase 
    if (p_phrase==r_phrase): 
        print("YES") 
        
5.Provided is a list of data about a store’s inventory where each item in the list represents the name of an item, how much is in stock, 
and how much it costs. Print out each item in the list with the same formatting, using the .format method (not string concatenation). 
For example, the first print statment should read The store has 12 shoes, each for 29.99 USD.
不是很难，熟悉.format的用法就行了
inventory = ["shoes, 12, 29.99", "shirts, 20, 9.99", "sweatpants, 25, 15.00", "scarves, 13, 7.75"]
for inv in inventory:
    lst=inv.split(", ")
    item=lst[0]
    num=lst[1]
    price=lst[2]
    store_inv="The store has {} {}, each for {} USD.".format(num,item,price)
    print (store_inv)

