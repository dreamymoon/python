                                                 ———————————————— week 1 ————————————————
————User Defined Classes
class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self):
        """ Create a new point at the origin """
        self.x = 0
        self.y = 0
    
    def __init__(self, initX, initY):   
       """ Adding Parameters to the Constructor """
        self.x = initX
        self.y = initY
   
    def getX(self):
       """Adding Other Methods to a Class """   
        return self.x

    def getY(self):
        return self.y

    def distanceFromOrigin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5
        
p = Point(7,6)
print(p.getX())
print(p.getY())
print(p.distanceFromOrigin())
————Objects as Arguments and Parameters
import math

class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def distanceFromOrigin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5

def distance(point1, point2):     #这里distance是在外面的
    xdiff = point2.getX()-point1.getX()
    ydiff = point2.getY()-point1.getY()

    dist = math.sqrt(xdiff**2 + ydiff**2)
    return dist

p = Point(4,3)
q = Point(0,0)
print(distance(p,q))
————
import math

class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def distanceFromOrigin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5

    def distance(self, point2):              #这里是在里面的，变成了p这个点为self，和point2比较
        xdiff = point2.getX()-self.getX()
        ydiff = point2.getY()-self.getY()

        dist = math.sqrt(xdiff**2 + ydiff**2)
        return dist

p = Point(4,3)
q = Point(0,0)
print(p.distance(q))
————这周课后很简单
                                                ———————————————— week 2 ————————————————
————Class Inheritance/Overriding Methods，paperbook和ebook都是book下的，而library是另外分的，可以观察写法
class Book():
    def __init__(self,title,author):
        self.title=title
        self.author=author
    def __str__ (self):
        return '"{}"by {}'.format(self.title, self.author   
class PaperBook (Book):
    def __init__ (self, title, author, numPages):
        Book.__init__(self, title, author)
        self.numPages=numPages
class EBook (Book):
    def __init__ (self, title, author, size):
        Book.__init__ (self, title, author)
        self.size=size
        
class Library:
    def __init__ (self):
        self.books=[]
    def addBook(self,book):
        self.books.append(book)
    def getNumBooks(self):
        return len(self.books)
        
myBook = EBook ('The Odyssey', 'Homer',2)
myPaperBook=PaperBook ('The Odyssey', 'Homer', 500)

aadl=Library()
aadl.addBook(myBook)
aadl.addBook(myPaperBook)
—————课后练习，理解题意比较费劲
                                               ———————————————— week 3 ————————————————
 ————Test cases
 def square(x):
    return x*x

assert square(3) == 9 #如果True，返回界面是空白的，如果False，程序报错
————当然，也可以用test.testEqual功能，会显示对错
def square(x):
    return x*x
    
import test
test.testEqual(square(9),100) #False
————TRY/EXCEPT
try:
   <try clause code block>
except <ErrorType>:
   <exception handler code block>
————
try:
    items = ['a', 'b']
    third = items[2]
    print("This won't print")
except Exception as e:   #大写的Exception,可以囊括所有的错误类型
    print("got an error")
    print(e)      #显示 IndexError: list index out of range on line 3
————
if somekey in d:
    # it's there; extract the data
    extract_data(d)
else:
    skip_this_one(d)
前者适合知道确切的数据或者数据少时使用 VS 后者适合不知道确切数据，或者数据多的时候使用
try:
    extract_data(d)
except KeyError:
    skip_this_one(d)
————
错误类型 https://fopp.umsi.education/books/published/fopp/Exceptions/standard-exceptions.html                                               
最后的练习太难了，debug花了一天半                                               
